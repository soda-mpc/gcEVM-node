// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.23.4
// source: soda-mpc/rpc/mpcService.proto

package vm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpName            string   `protobuf:"bytes,1,opt,name=op_name,json=opName,proto3" json:"op_name,omitempty"`
	NumInputs         uint32   `protobuf:"varint,2,opt,name=num_inputs,json=numInputs,proto3" json:"num_inputs,omitempty"`
	ParametersBitSize []uint32 `protobuf:"varint,3,rep,packed,name=parameters_bit_size,json=parametersBitSize,proto3" json:"parameters_bit_size,omitempty"`
	InputTypes        []byte   `protobuf:"bytes,4,opt,name=input_types,json=inputTypes,proto3" json:"input_types,omitempty"`
	Parameters        [][]byte `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *MPCRequest) Reset() {
	*x = MPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPCRequest) ProtoMessage() {}

func (x *MPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPCRequest.ProtoReflect.Descriptor instead.
func (*MPCRequest) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{0}
}

func (x *MPCRequest) GetOpName() string {
	if x != nil {
		return x.OpName
	}
	return ""
}

func (x *MPCRequest) GetNumInputs() uint32 {
	if x != nil {
		return x.NumInputs
	}
	return 0
}

func (x *MPCRequest) GetParametersBitSize() []uint32 {
	if x != nil {
		return x.ParametersBitSize
	}
	return nil
}

func (x *MPCRequest) GetInputTypes() []byte {
	if x != nil {
		return x.InputTypes
	}
	return nil
}

func (x *MPCRequest) GetParameters() [][]byte {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type MPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output     []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	ResultCode int32  `protobuf:"varint,2,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
}

func (x *MPCResponse) Reset() {
	*x = MPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPCResponse) ProtoMessage() {}

func (x *MPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPCResponse.ProtoReflect.Descriptor instead.
func (*MPCResponse) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{1}
}

func (x *MPCResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *MPCResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

type InitMPCStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitMPCStatusRequest) Reset() {
	*x = InitMPCStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMPCStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMPCStatusRequest) ProtoMessage() {}

func (x *InitMPCStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMPCStatusRequest.ProtoReflect.Descriptor instead.
func (*InitMPCStatusRequest) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{2}
}

type InitMPCStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultCode int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
}

func (x *InitMPCStatusResponse) Reset() {
	*x = InitMPCStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMPCStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMPCStatusResponse) ProtoMessage() {}

func (x *InitMPCStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMPCStatusResponse.ProtoReflect.Descriptor instead.
func (*InitMPCStatusResponse) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{3}
}

func (x *InitMPCStatusResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

type GetMPCStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMPCStatusRequest) Reset() {
	*x = GetMPCStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMPCStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMPCStatusRequest) ProtoMessage() {}

func (x *GetMPCStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMPCStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMPCStatusRequest) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{4}
}

type GetMPCStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircuitsNames    []string `protobuf:"bytes,1,rep,name=circuitsNames,proto3" json:"circuitsNames,omitempty"`
	BatchIds         []uint64 `protobuf:"varint,2,rep,packed,name=batchIds,proto3" json:"batchIds,omitempty"`
	CircuitInBatches []int64  `protobuf:"varint,3,rep,packed,name=circuitInBatches,proto3" json:"circuitInBatches,omitempty"`
	ResultCode       int32    `protobuf:"varint,4,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
}

func (x *GetMPCStatusResponse) Reset() {
	*x = GetMPCStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMPCStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMPCStatusResponse) ProtoMessage() {}

func (x *GetMPCStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMPCStatusResponse.ProtoReflect.Descriptor instead.
func (*GetMPCStatusResponse) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{5}
}

func (x *GetMPCStatusResponse) GetCircuitsNames() []string {
	if x != nil {
		return x.CircuitsNames
	}
	return nil
}

func (x *GetMPCStatusResponse) GetBatchIds() []uint64 {
	if x != nil {
		return x.BatchIds
	}
	return nil
}

func (x *GetMPCStatusResponse) GetCircuitInBatches() []int64 {
	if x != nil {
		return x.CircuitInBatches
	}
	return nil
}

func (x *GetMPCStatusResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

type SetMPCStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircuitsNames    []string `protobuf:"bytes,1,rep,name=circuitsNames,proto3" json:"circuitsNames,omitempty"`
	BatchIds         []uint64 `protobuf:"varint,2,rep,packed,name=batchIds,proto3" json:"batchIds,omitempty"`
	CircuitInBatches []int64  `protobuf:"varint,3,rep,packed,name=circuitInBatches,proto3" json:"circuitInBatches,omitempty"`
}

func (x *SetMPCStatusRequest) Reset() {
	*x = SetMPCStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMPCStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMPCStatusRequest) ProtoMessage() {}

func (x *SetMPCStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMPCStatusRequest.ProtoReflect.Descriptor instead.
func (*SetMPCStatusRequest) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{6}
}

func (x *SetMPCStatusRequest) GetCircuitsNames() []string {
	if x != nil {
		return x.CircuitsNames
	}
	return nil
}

func (x *SetMPCStatusRequest) GetBatchIds() []uint64 {
	if x != nil {
		return x.BatchIds
	}
	return nil
}

func (x *SetMPCStatusRequest) GetCircuitInBatches() []int64 {
	if x != nil {
		return x.CircuitInBatches
	}
	return nil
}

type SetMPCStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultCode int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
}

func (x *SetMPCStatusResponse) Reset() {
	*x = SetMPCStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMPCStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMPCStatusResponse) ProtoMessage() {}

func (x *SetMPCStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMPCStatusResponse.ProtoReflect.Descriptor instead.
func (*SetMPCStatusResponse) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{7}
}

func (x *SetMPCStatusResponse) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

type IsConnectedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsConnectedRequest) Reset() {
	*x = IsConnectedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsConnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsConnectedRequest) ProtoMessage() {}

func (x *IsConnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsConnectedRequest.ProtoReflect.Descriptor instead.
func (*IsConnectedRequest) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{8}
}

type IsConnectedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *IsConnectedResponse) Reset() {
	*x = IsConnectedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsConnectedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsConnectedResponse) ProtoMessage() {}

func (x *IsConnectedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_soda_mpc_rpc_mpcService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsConnectedResponse.ProtoReflect.Descriptor instead.
func (*IsConnectedResponse) Descriptor() ([]byte, []int) {
	return file_soda_mpc_rpc_mpcService_proto_rawDescGZIP(), []int{9}
}

func (x *IsConnectedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_soda_mpc_rpc_mpcService_proto protoreflect.FileDescriptor

var file_soda_mpc_rpc_mpcService_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x6f, 0x64, 0x61, 0x2d, 0x6d, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0a,
	0x4d, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x5f, 0x62, 0x69, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x69, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x0b, 0x4d, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x15, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x63, 0x69, 0x72, 0x63, 0x75,
	0x69, 0x74, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69,
	0x74, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x10, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x22, 0x37, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x49,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x2d, 0x0a, 0x13, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x93, 0x03, 0x0a, 0x0a, 0x4d, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x52, 0x75, 0x6e, 0x4d, 0x50, 0x43, 0x12, 0x16, 0x2e, 0x6d, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x49, 0x6e,
	0x69, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x70,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x50, 0x43,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d,
	0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x6d, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_soda_mpc_rpc_mpcService_proto_rawDescOnce sync.Once
	file_soda_mpc_rpc_mpcService_proto_rawDescData = file_soda_mpc_rpc_mpcService_proto_rawDesc
)

func file_soda_mpc_rpc_mpcService_proto_rawDescGZIP() []byte {
	file_soda_mpc_rpc_mpcService_proto_rawDescOnce.Do(func() {
		file_soda_mpc_rpc_mpcService_proto_rawDescData = protoimpl.X.CompressGZIP(file_soda_mpc_rpc_mpcService_proto_rawDescData)
	})
	return file_soda_mpc_rpc_mpcService_proto_rawDescData
}

var file_soda_mpc_rpc_mpcService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_soda_mpc_rpc_mpcService_proto_goTypes = []any{
	(*MPCRequest)(nil),            // 0: mpcService.MPCRequest
	(*MPCResponse)(nil),           // 1: mpcService.MPCResponse
	(*InitMPCStatusRequest)(nil),  // 2: mpcService.InitMPCStatusRequest
	(*InitMPCStatusResponse)(nil), // 3: mpcService.InitMPCStatusResponse
	(*GetMPCStatusRequest)(nil),   // 4: mpcService.GetMPCStatusRequest
	(*GetMPCStatusResponse)(nil),  // 5: mpcService.GetMPCStatusResponse
	(*SetMPCStatusRequest)(nil),   // 6: mpcService.SetMPCStatusRequest
	(*SetMPCStatusResponse)(nil),  // 7: mpcService.SetMPCStatusResponse
	(*IsConnectedRequest)(nil),    // 8: mpcService.IsConnectedRequest
	(*IsConnectedResponse)(nil),   // 9: mpcService.IsConnectedResponse
}
var file_soda_mpc_rpc_mpcService_proto_depIdxs = []int32{
	0, // 0: mpcService.MPCService.RunMPC:input_type -> mpcService.MPCRequest
	2, // 1: mpcService.MPCService.InitMPCStatus:input_type -> mpcService.InitMPCStatusRequest
	4, // 2: mpcService.MPCService.GetMPCStatus:input_type -> mpcService.GetMPCStatusRequest
	6, // 3: mpcService.MPCService.SetMPCStatus:input_type -> mpcService.SetMPCStatusRequest
	8, // 4: mpcService.MPCService.IsConnected:input_type -> mpcService.IsConnectedRequest
	1, // 5: mpcService.MPCService.RunMPC:output_type -> mpcService.MPCResponse
	3, // 6: mpcService.MPCService.InitMPCStatus:output_type -> mpcService.InitMPCStatusResponse
	5, // 7: mpcService.MPCService.GetMPCStatus:output_type -> mpcService.GetMPCStatusResponse
	7, // 8: mpcService.MPCService.SetMPCStatus:output_type -> mpcService.SetMPCStatusResponse
	9, // 9: mpcService.MPCService.IsConnected:output_type -> mpcService.IsConnectedResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_soda_mpc_rpc_mpcService_proto_init() }
func file_soda_mpc_rpc_mpcService_proto_init() {
	if File_soda_mpc_rpc_mpcService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_soda_mpc_rpc_mpcService_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*InitMPCStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*InitMPCStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetMPCStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetMPCStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SetMPCStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SetMPCStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*IsConnectedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_soda_mpc_rpc_mpcService_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*IsConnectedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_soda_mpc_rpc_mpcService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_soda_mpc_rpc_mpcService_proto_goTypes,
		DependencyIndexes: file_soda_mpc_rpc_mpcService_proto_depIdxs,
		MessageInfos:      file_soda_mpc_rpc_mpcService_proto_msgTypes,
	}.Build()
	File_soda_mpc_rpc_mpcService_proto = out.File
	file_soda_mpc_rpc_mpcService_proto_rawDesc = nil
	file_soda_mpc_rpc_mpcService_proto_goTypes = nil
	file_soda_mpc_rpc_mpcService_proto_depIdxs = nil
}
